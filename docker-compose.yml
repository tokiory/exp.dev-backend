services:
  database:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PORT: ${DB_PORT}
    env_file:
      - .env
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
  app:
    build:
      context: .
      dockerfile: .docker/app.Dockerfile
    depends_on:
      - database
      - migration
    env_file:
      - .env
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  migration:
    build:
      context: .
      dockerfile: .docker/migration.Dockerfile
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - .env
    command: "goose -dir /migrations postgres 'host=database user=${DB_USER} password=${DB_PASSWORD} dbname=${DB_NAME} sslmode=disable' up"
    volumes:
      - ./db/migration:/migrations
volumes:
  db_data:
